@model cutypai.Models.User
@{
    ViewData["Title"] = "My Profile";
}

<div class="min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800 py-12">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        
        <!-- Success/Error Messages -->
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="mb-6 p-4 bg-green-100 border border-green-400 text-green-700 rounded-lg">
                <i class="fas fa-check-circle mr-2"></i>@TempData["SuccessMessage"]
            </div>
        }
        
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="mb-6 p-4 bg-red-100 border border-red-400 text-red-700 rounded-lg">
                <i class="fas fa-exclamation-circle mr-2"></i>@TempData["ErrorMessage"]
            </div>
        }

        <!-- Profile Header -->
        <div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg overflow-hidden mb-8">
            <div class="h-32 bg-gradient-to-r from-blue-500 to-purple-600"></div>
            <div class="px-6 pb-6">
                <div class="flex items-center -mt-16">
                    <div class="w-24 h-24 bg-white dark:bg-gray-700 rounded-full border-4 border-white dark:border-gray-700 flex items-center justify-center">
                        @if (!string.IsNullOrEmpty(Model.AvatarUrl))
                        {
                            <img src="@Model.AvatarUrl" alt="Profile Avatar" class="w-20 h-20 rounded-full object-cover">
                        }
                        else
                        {
                            <i class="fas fa-user text-3xl text-gray-400"></i>
                        }
                    </div>
                    <div class="ml-6 mt-16">
                        <h1 class="text-2xl font-bold text-gray-900 dark:text-white">@Model.Name</h1>
                        <p class="text-gray-600 dark:text-gray-300">@Model.Email</p>
                        <div class="flex items-center mt-2">
                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200">
                                <i class="fas fa-circle text-green-400 mr-1" style="font-size: 6px;"></i>
                                @Model.Status
                            </span>
                            <span class="ml-3 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200">
                                <i class="fas fa-shield-alt mr-1"></i>
                                @Model.Role
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Profile Information Grid -->
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
            
            <!-- Account Information -->
            <div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6">
                <div class="flex items-center mb-6">
                    <i class="fas fa-user-circle text-2xl text-blue-500 mr-3"></i>
                    <h2 class="text-xl font-semibold text-gray-900 dark:text-white">Account Information</h2>
                </div>
                
                <div class="space-y-4">
                    <div class="border-b border-gray-200 dark:border-gray-700 pb-4">
                        <label class="block text-sm font-medium text-gray-500 dark:text-gray-400 mb-1">Full Name</label>
                        <p class="text-gray-900 dark:text-white font-medium">@Model.Name</p>
                    </div>
                    
                    <div class="border-b border-gray-200 dark:border-gray-700 pb-4">
                        <label class="block text-sm font-medium text-gray-500 dark:text-gray-400 mb-1">Email Address</label>
                        <p class="text-gray-900 dark:text-white font-medium">@Model.Email</p>
                    </div>
                    
                    <div class="border-b border-gray-200 dark:border-gray-700 pb-4">
                        <label class="block text-sm font-medium text-gray-500 dark:text-gray-400 mb-1">User ID</label>
                        <p class="text-gray-900 dark:text-white font-mono text-sm">@Model.Id</p>
                    </div>
                    
                    <div class="border-b border-gray-200 dark:border-gray-700 pb-4">
                        <label class="block text-sm font-medium text-gray-500 dark:text-gray-400 mb-1">Account Role</label>
                        <p class="text-gray-900 dark:text-white font-medium">@Model.Role</p>
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-500 dark:text-gray-400 mb-1">Account Status</label>
                        <p class="text-gray-900 dark:text-white font-medium">@Model.Status</p>
                    </div>
                </div>
            </div>

            <!-- Activity Information -->
            <div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6">
                <div class="flex items-center mb-6">
                    <i class="fas fa-clock text-2xl text-green-500 mr-3"></i>
                    <h2 class="text-xl font-semibold text-gray-900 dark:text-white">Activity Information</h2>
                </div>
                
                <div class="space-y-4">
                    <div class="border-b border-gray-200 dark:border-gray-700 pb-4">
                        <label class="block text-sm font-medium text-gray-500 dark:text-gray-400 mb-1">Member Since</label>
                        <p class="text-gray-900 dark:text-white font-medium">
                            @Model.CreatedAtUtc.ToString("MMMM dd, yyyy")
                        </p>
                        <p class="text-sm text-gray-500 dark:text-gray-400">
                            @((DateTime.UtcNow - Model.CreatedAtUtc).Days) days ago
                        </p>
                    </div>
                    
                    <div class="border-b border-gray-200 dark:border-gray-700 pb-4">
                        <label class="block text-sm font-medium text-gray-500 dark:text-gray-400 mb-1">Last Login</label>
                        @if (Model.LastLoginUtc.HasValue)
                        {
                            <p class="text-gray-900 dark:text-white font-medium">
                                @Model.LastLoginUtc.Value.ToString("MMMM dd, yyyy 'at' HH:mm")
                            </p>
                            <p class="text-sm text-gray-500 dark:text-gray-400">
                                @((DateTime.UtcNow - Model.LastLoginUtc.Value).TotalHours < 24 ? 
                                    $"{(int)(DateTime.UtcNow - Model.LastLoginUtc.Value).TotalHours} hours ago" : 
                                    $"{(int)(DateTime.UtcNow - Model.LastLoginUtc.Value).TotalDays} days ago")
                            </p>
                        }
                        else
                        {
                            <p class="text-gray-500 dark:text-gray-400 italic">Never logged in</p>
                        }
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-500 dark:text-gray-400 mb-1">Account Age</label>
                        <p class="text-gray-900 dark:text-white font-medium">
                            @{
                                var accountAge = DateTime.UtcNow - Model.CreatedAtUtc;
                                var ageText = accountAge.TotalDays < 1 ? "Less than a day" :
                                             accountAge.TotalDays < 30 ? $"{(int)accountAge.TotalDays} days" :
                                             accountAge.TotalDays < 365 ? $"{(int)(accountAge.TotalDays / 30)} months" :
                                             $"{(int)(accountAge.TotalDays / 365)} years";
                            }
                            @ageText
                        </p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Action Buttons -->
        <div class="mt-8 flex flex-col sm:flex-row gap-4">
            <button class="flex-1 bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-6 rounded-lg transition-colors duration-200 flex items-center justify-center">
                <i class="fas fa-edit mr-2"></i>
                Edit Profile
            </button>
            
            <button class="flex-1 bg-gray-600 hover:bg-gray-700 text-white font-medium py-3 px-6 rounded-lg transition-colors duration-200 flex items-center justify-center">
                <i class="fas fa-key mr-2"></i>
                Change Password
            </button>
            
            <form asp-controller="Auth" asp-action="Logout" method="post" class="flex-1">
                @Html.AntiForgeryToken()
                <button type="submit" class="w-full bg-red-600 hover:bg-red-700 text-white font-medium py-3 px-6 rounded-lg transition-colors duration-200 flex items-center justify-center">
                    <i class="fas fa-sign-out-alt mr-2"></i>
                    Logout
                </button>
            </form>
        </div>

        <!-- Quick Stats -->
        <div class="mt-8 grid grid-cols-1 md:grid-cols-3 gap-6">
            <div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 text-center">
                <div class="inline-flex items-center justify-center w-12 h-12 bg-blue-100 dark:bg-blue-900 rounded-full mb-4">
                    <i class="fas fa-calendar-alt text-blue-600 dark:text-blue-400"></i>
                </div>
                <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-2">Days Active</h3>
                <p class="text-2xl font-bold text-blue-600 dark:text-blue-400">@((DateTime.UtcNow - Model.CreatedAtUtc).Days)</p>
            </div>
            
            <div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 text-center">
                <div class="inline-flex items-center justify-center w-12 h-12 bg-green-100 dark:bg-green-900 rounded-full mb-4">
                    <i class="fas fa-shield-check text-green-600 dark:text-green-400"></i>
                </div>
                <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-2">Account Security</h3>
                <p class="text-lg font-semibold text-green-600 dark:text-green-400">Verified</p>
            </div>
            
            <div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 text-center">
                <div class="inline-flex items-center justify-center w-12 h-12 bg-purple-100 dark:bg-purple-900 rounded-full mb-4">
                    <i class="fas fa-crown text-purple-600 dark:text-purple-400"></i>
                </div>
                <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-2">Membership</h3>
                <p class="text-lg font-semibold text-purple-600 dark:text-purple-400">@Model.Role</p>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Add any profile-specific JavaScript here
        document.addEventListener('DOMContentLoaded', function() {
            // Animate cards on scroll
            const cards = document.querySelectorAll('.bg-white, .dark\\:bg-gray-800');
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.style.opacity = '1';
                        entry.target.style.transform = 'translateY(0)';
                    }
                });
            });
            
            cards.forEach(card => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(20px)';
                card.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
                observer.observe(card);
            });
        });
    </script>
}
